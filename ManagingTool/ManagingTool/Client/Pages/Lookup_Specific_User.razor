@page "/Lookup_Specific_User"
@using System.ComponentModel.DataAnnotations;
@using System.ComponentModel
@using AntDesign.TableModels
@using AntDesign.Core.Extensions
@inject UserService UserDataService
@inject ItemService ItemService
@inject MailService MailService

<h3>SearchUserData</h3>

<div class="mb-3">
    UserID:
    <input type="number" @bind="userId" class="form-label" name="UserID">UserID</input>
    <button class="btn btn-primary" @onclick="GetUserData" >Search</button>
</div>


<Tabs @bind-ActiveKey="@activeKey" Animated>
    <TabPane Tab="BasicInfo" Key="1">
        <Table TItem="UserInfo" DataSource="@userDataSet">
            <GenerateColumns Range="1.." Definitions=definitions />
        </Table>
    </TabPane>
    <TabPane Tab="Item" Key="2">
        <Table TItem="UserItem" DataSource="@userItemDataSet">
            <GenerateColumns Range="1.." Definitions=definitions />
        </Table>
    </TabPane>
    <TabPane Tab="Mail" Key="3">
        <Table TItem="MailData" DataSource="@userMailDataSet">
            <GenerateColumns Range="1.." Definitions=definitions />
        </Table>
    </TabPane>
</Tabs>


@code {
    string activeKey { get; set; } = "1";

    void definitions(string propertyName, object column)
    {
        column.SetValue("Sortable", true);
        column.SetValue("Filterable", true);
    }

    Int64 userId = 0;


    List<UserInfo> userDataSet = new();
    List<UserItem> userItemDataSet = new();
    List<MailData> userMailDataSet = new();

    async Task GetUserData()
    {
        await GetUserBasicInfo();
        await GetUserItemList();
        await GetUserMail();
    }

    async Task GetUserBasicInfo()
    {
        userDataSet.Clear();

        var response = await UserDataService.GetUserBasicInfo(userId);
        userDataSet = response.UserInfo;
    }

    async Task GetUserItemList()
    {
        userItemDataSet.Clear();

        var response = await ItemService.GetUserItemList(userId);
        userItemDataSet = response.UserItem;
    }

    async Task GetUserMail()
    {
        userMailDataSet.Clear();

        var response = await MailService.GetUserMailList(userId);
        userMailDataSet = response.UserMail;
    }
}
